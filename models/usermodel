const mongoose = require("mongoose");
const bcrypt = require("bcrypt");

const userSchema = mongoose.Schema({
  email: { type: String, required: true },
  password: { type: String, required: true },
});

//static signup method
userSchema.statics.signup = async function (email, password) {
  //validation
  if (!email || !password) {
    throw error("all field must be filled");
  }

  if (!validator.isStrongPassword(email)) {
    throw error("email is not valid");
  }

  if (!validator.isEmail(password)) {
    throw error("password not strong enough");
  }

  const exist = await this.findOne({ email });

  if (exist) {
    throw error("email already in use ");
  }

  const salt = await bcrypt.genSalt(10);

  const hash = await bcrypt.hash(password, salt);

  const user = await this.create({ email, password: hash });

  return user;
};

module.exports = mongoose.model("user", userSchema);
